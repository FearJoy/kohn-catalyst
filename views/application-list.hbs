<div>
    <h1>Application List</h1>
</div>
<div>

    <h3>Static list sample:</h3>
    <ul>
        <!-- each static_list
                This pulls in the 'context' object passed by the router
                Calling 'each' in handle bars iterates over the current opject
                Context, does not need to be referenced, only static_list inside of context-->
        {{#each context.static_list}}
        <p>States</p>
        <!-- each this
                Since we are iterating over a list, we can use 'this' to reference
                the current item we are iterating
                In this case, 'this' is referencing context.static_list.state-->
        {{#each this}}
            <ul>
                <li>{{this}}</li>
                <!-- this
                        Again, we are iterating over an object, just one step deeper
                        Our current position is context.static_list.state[iterator_position]
                        This will be looped over until it finishes-->
            </ul>
        {{/each}} <!--Close 'state' iterating loop -->

        {{#each static_list}} <!-- Iterate over context.static_list.cities AKA context.static_list.[iterator_position]-->
            <ul>
                <li>{{this.city}}</li>
            </ul>
            {{/each}}
        {{/each}}
    </ul>
</div>

<div>
    <h3>Database List Sample</h3>
    <p>Database: <b>test</b> | Collection: <b>applications</b> is {{count}}</p>
    <table>
    <tr>
        <th>Name</th>
        <th>Status</th>
        <th>DoB</th>
        <th>Address</th>
        <th>Phone</th>
    </tr>
    {{#each application}}
    <tr>
        <td>{{this.first_name}} {{this.last_name}}</td>
        <td>{{this.status}}</td>
        <td>{{this.dob}}</td>
        <td>{{this.address.number}} {{this.address.street}}<br>
            {{this.address.city}}, {{this.address.state}} {{this.address.zip}}</td>
        <td>{{this.phone}}</td>
    {{/each}}
    </tr>
    </table>

</div>